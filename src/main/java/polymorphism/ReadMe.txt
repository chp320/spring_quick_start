결합도(Coupling) 낮추기!
- 결합도 : 하나의 클래스가 다른 클래스와 얼마나 많이 연결되어 있는지를 나타내는 표현. 결합도가 낮아야 한다!

결합도 낮추는 방법
1. 다형성 이용하기
- 상속, 메서드 재정의(overriding), 형변환
2. 디자인패턴 이용하기
- 예시에서는 '팩토리 패턴' 사용
- TV, TVUser 사이를 느슨한 결합 상태로 만듦

--------------------------------------------------------------------------------------------------------

[Class 04] 의존성 주입
1. 스프링의 의존성 관리
- 스프링 프레임워크의 가장 중요한 특징 : 객체의 생성과 의존관계를 컨테이너가 자동으로 관리 -> 스프링 IoC(제어의 역행) 핵심 원리
- IoC(Inversion of Control) 2가지 지원 형태
  1) Dependency Lookup : 컨테이너가 어플리케이션 운용에 필요한 객체를 생성하고 클라이언트는 컨테이너가 생성한 객체를 검색(lookup)하여 사용하는 방식 -> 실제 사용하지 않음
  2) Dependency Injection : 객체 사이의 의존관계를 스프링 설정 파일에 등록된 정보를 바탕으로 컨테이너가 자동으로 처리. 컨테이너가 직접 객체들 사이에 의존관계를 처리
    a) Setter Injection
    b) Constructor Injection
※ 의존성(dependency) 관계
- 객체와 객체의 결합 관계
- 하나의 객체에서 다른 객체의 변수나 메서드를 호출할 필요가 있는 경우 해당 객체 생성과 객체 레퍼런스 정보가 필요한데 이 경우 '의존한다'고 한다.